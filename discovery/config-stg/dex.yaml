pack:
  namespace: "dex"
charts:
  dex:
    # Default values for dex.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    # -- Number of Pods to launch.
    replicaCount: 3
    image:
      # -- Repository to pull the container image from.
      repository: ghcr.io/dexidp/dex
      # -- Image [pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      pullPolicy: IfNotPresent
      # TODO(sagikazarmark): use a tagged version when available
      # -- Overrides the image tag (default is the chart appVersion).
      tag: ""
    # -- Image [pull secrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-pod-that-uses-your-secret)
    imagePullSecrets: []
    # -- Provide a name in place of the chart name for `app:` labels.
    nameOverride: ""
    # -- Provide a name to substitute for the full names of resources.
    fullnameOverride: ""
    https:
      # -- Enable the HTTPS endpoint.
      enabled: false
    grpc:
      # -- Enable the gRPC endpoint.
      # Read more in the [documentation](https://dexidp.io/docs/api/).
      enabled: false
    # -- Application configuration.
    # See the [official documentation](https://dexidp.io/docs/).
    config:
      issuer: https://${issuer}
      storage:
        type: kubernetes
        config:
          inCluster: true
      logger:
        level: debug
      web:
        # port is taken from ports section above
        address: 0.0.0.0
        tlsCert: /etc/dex/tls/https/server/tls.crt
        tlsKey: /etc/dex/tls/https/server/tls.key
        allowedOrigins: []
      connectors:
      - type: ldap
        # Required field for connector id.
        id: ldap
        # Required field for connector name.
        name: LDAP (Okta-Dex)
        config:
          host: dev-6428100.ldap.okta.com
          insecureNoSSL: false
          insecureSkipVerify: true
          #rootCA: /etc/dex/ldap.ca
          bindDN: "$BINDDN"
          bindPW: "$BINDPW"
            # User search maps a username and password entered by a user to a LDAP entry.
          userSearch:
            # BaseDN to start the search from. It will translate to the query
            # "(&(objectClass=person)(uid=<username>))".
            baseDN: ou=users,dc=dev-6428100,dc=okta,dc=com
            # Optional filter to apply when searching the directory.
            filter: (objectClass=person)
            # username attribute used for comparing user entries. This will be translated
            # and combined with the other filter as "(<attr>=<username>)".
            username: uid
            # The following three fields are direct mappings of attributes on the user entry.
            # String representation of the user.
            idAttr: DN
            # Required. Attribute to map to Email.
            emailAttr: mail
            # Maps to display name of users. No default value.
            nameAttr: cn
          # Group search queries for groups given a user entry.
          groupSearch:
            # BaseDN to start the search from. It will translate to the query
            # "(&(objectClass=group)(member=<user uid>))".
            baseDN: ou=groups,dc=dev-6428100,dc=okta,dc=com
            # Optional filter to apply when searching the directory.
            #filter: "(objectClass=group)"

            # Following list contains field pairs that are used to match a user to a group. It adds an additional
            # requirement to the filter that an attribute in the group must match the user's
            # attribute value.
            userMatchers:
            - userAttr: DN
              groupAttr: uniqueMember

            # Represents group name.
            nameAttr: cn
      oauth2:
        alwaysShowLoginScreen: true
        skipApprovalScreen: true
        passwordConnector: ldap
      staticClients:
      - id: spectrocloud
        name: 'Spectro Cloud'
        public: true
        redirectURIs:
        - http://127.0.0.1:5555/callback
        - http://localhost:8000
        - http://localhost:18000
        - urn:ietf:wg:oauth:2.0:oob
      enablePasswordDB: false
    # -- Additional storage [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) of a Pod.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/pod-v1/#volumes) for details.
    # volumes: []
    # -- Additional [volume mounts](https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/) of a container.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/container/#volumes) for details.
    volumeMounts: []
    # -- Configure a [Secret](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables) or a [ConfigMap](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables) as environment variable sources for a Pod.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/container/#environment-variables) for details.
    envFrom: []
    # -- Pass environment variables directly to a Pod.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/container/#environment-variables) for details.
    env:
      KUBERNETES_POD_NAMESPACE: dex
    #
    serviceAccount:
      # -- Whether a service account should be created.
      create: true
      # -- Annotations to add to the service account.
      annotations: {}
      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template.
      name: ""
    rbac:
      # -- Specifies whether RBAC resources should be created.
      # If disabled, the operator is responsible for creating the necessary resources based on the templates.
      create: true
    # -- Custom annotations for a Pod.
    podAnnotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/agent-pre-populate-only: "true"
      vault.hashicorp.com/agent-configmap: vaultconfig
      vault.hashicorp.com/agent-extra-secret: ldap-secret
    # -- Pod [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod).
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/pod-v1/#security-context) for details.
    podSecurityContext: {}
      # fsGroup: 2000
    # -- Container [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container).
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/container/#security-context) for details.
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    service:
      # -- Annotations to add to the Service.
      annotations: {}
      # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
      type: ClusterIP
      ports:
        http:
          # -- HTTP service port
          port: 5556
          # -- (int) HTTP node port (when applicable)
          nodePort:
        grpc:
          # -- gRPC service port
          port: 5557
          # -- (int) gRPC node port (when applicable)
          nodePort:
    # -- Ingress configuration (see [values.yaml](values.yaml) for details).
    # @default -- Disabled by default.
    ingress:
      enabled: true
      annotations:
        # kubernetes.io/ingress.class: std-ingress-class
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: ${issuer}
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - ${issuer}
    # -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/container/#resources) for details.
    # @default -- No requests or limits.
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    # -- Autoscaling configuration (see [values.yaml](values.yaml) for details).
    # @default -- Disabled by default.
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) configuration.
    nodeSelector: {}
    # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for node taints.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/pod-v1/#scheduling) for details.
    tolerations: []
    # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) configuration.
    # See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workloads-resources/pod-v1/#scheduling) for details.
    affinity: {}
    # -- [InitContainers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/) for the Pod.
    initContainers:
      - name: init-wait-for-vault
        image: gcr.io/google_containers/kubernetes-dashboard-init-amd64:v1.0.0
        command:
        - /bin/bash
        - -xc
        - |
          #!/bin/bash
          # Vault leaves agent-inject-status=injected annotation in the Dex pod when vault agent has successfully injected the secrets
          # Wait ( & restart Dex pod ) until the annotation is set
          cat /etc/podinfo/annotations
          grep 'agent-inject-status="injected"' /etc/podinfo/annotations -q
          if [[ "$?" != 0 ]] ; then
            echo "Vault agent injection not finished. Sleep 10 seconds and retry by deleting pod '$pod_name' !";
            sleep 10;
            kubectl delete pod -n $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace) $pod_name
          else
            echo "Vault agent injection status verified, init finished !"
          fi
        volumeMounts:
        - name: podinfo
          mountPath: /etc/podinfo
        env:
        - name: pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
    useVaultIntegration: true
    volumes:
      - name: podinfo
        downwardAPI:
          items:
            - path: "annotations"
              fieldRef:
                fieldPath: metadata.annotations
