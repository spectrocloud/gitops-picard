# Spectro Golden images includes most of the hardening standards recommended by CIS benchmarking v1.5
# Uncomment below section to
# 1. Include custom files to be copied over to the nodes and/or
# 2. Execute list of commands before or after kubeadm init/join is executed
#
kubeadmconfig:
  preKubeadmCommands:
    - echo "Executing pre kube admin config commands"
    - update-ca-certificates
    - curl --user spectro:admin@airgap http://10.10.202.235/images/import-vsphere-k8s-images.sh -o /tmp/import-vsphere-k8s-images.sh
    - bash /tmp/import-vsphere-k8s-images.sh
    - 'systemctl restart containerd; sleep 3'
    - 'while [ ! -S /var/run/containerd/containerd.sock ]; do echo "Waiting for containerd..."; sleep 1; done'
  postKubeadmCommands:
    - echo "Executing post kube admin config commands"
    - '/etc/kubernetes/pwx-node-labeler.sh'
  files:
    - targetPath: /etc/kubernetes/pwx-node-labeler.sh
      targetOwner: "root:root"
      targetPermissions: "0700"
      content: |
        #!/bin/bash
        if [[ ! -f /etc/kubernetes/admin.conf ]]; then
          export KUBECONFIG=/etc/kubernetes/kubelet.conf;
          zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
          while [ -z $zone ]; do
            echo "Waiting for zone label to get populated in the node $(hostname)...";
            sleep 10;
            zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
            #Check beta label as a fallback
            [ -z "$zone" ] && zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.failure-domain\.beta\.kubernetes\.io\/zone}");
          done;
          echo "Zone label populated on the node is $zone";
          kubectl label node `hostname` "px/rack=$zone";
        else
          echo "Skipping px-rack label for ControlPlane nodes"
        fi
    - targetPath: /usr/local/share/ca-certificates/root_ca.crt
      targetOwner: "root:root"
      targetPermissions: "0644"
      content: |
        -----BEGIN CERTIFICATE-----
        MIIDFTCCAf2gAwIBAgIUG76JmrZRzfRlbstRUHrqpixTTRswDQYJKoZIhvcNAQEL
        BQAwEjEQMA4GA1UEAwwHcm9vdF9jYTAeFw0yMTAzMDYyMjIwMDRaFw0zMDA0MjIw
        NjIwMzRaMBIxEDAOBgNVBAMMB3Jvb3RfY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IB
        DwAwggEKAoIBAQDvvHKWD+PgeLjntQPXJaaGe8MVgTwtMlN+91xvs1kAofqmKqIw
        qrFA2hlE5MsMQoBoL1Bozj4iWOITxCx1Qbyj2dspyRJTot1JI/LVVkYdZzJBy8G4
        gHdo5GB8dLZ+TmtEA4GZdVU34ODv4jBuKEfflVRrUV98rpXtSdF0gXxKQ0VQcj9V
        xLaUxfmgcaDbpsCJcJ/XUEBK5zbUjX8E2xbzY2G00umQIbBTiW/Qew3l2pQCUN9j
        Hll2xB6SzwFxMNA028aF3Wds818EEVkKEv+7zAA/xUCuJpx/04yevY7NxBOTOPwN
        ptLh/3uJ75GlzNzkCljw7Eq6qHZR1egWR2/DAgMBAAGjYzBhMA4GA1UdDwEB/wQE
        AwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBREMqKdJMA6J1x92VyXyig/
        /CGHmDAfBgNVHSMEGDAWgBREMqKdJMA6J1x92VyXyig//CGHmDANBgkqhkiG9w0B
        AQsFAAOCAQEAXgGjvknG5E/B+Yw/ADzo5IMfGfuOvXYLvoXfvIk6R+uY37yCaMTy
        swngvv33Ba1QQdMZML2cOQw4IF+xJYcG5NwZgrmv7BX5TU1NXy/E8Atc44TwZ2WE
        dlbmn0qW0Rk5EtUfU9f08eDpHolLXVhkrVrXsmn/1/J8E8C8YWMXkMgfBh5qtcnN
        0fjrLIkF0QFUeKlPOGE6t1yA6FB0NgbuH25ot+IguZsL+4KQyRs6fPcjkHpfy41q
        53AYhXzfdNFSQu+DEKQEuDha2t/P6O/3faonwRbsTjkDt64bw8f1i3bXGEMV6cXs
        e+r71NOzxebWScL2SSZfVqpTgsckgSA5DQ==
        -----END CERTIFICATE-----
