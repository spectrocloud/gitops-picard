# Spectro Golden images includes most of the hardening standards recommended by CIS benchmarking v1.5
# Uncomment below section to
# 1. Include custom files to be copied over to the nodes and/or
# 2. Execute list of commands before or after kubeadm init/join is executed
#
kubeadmconfig:
  preKubeadmCommands:
    - echo "Executing pre kube admin config commands"
    - update-ca-certificates
    - curl --user spectro:admin@airgap http://10.10.167.44/images/import-vsphere-k8s-images.sh -o /tmp/import-vsphere-k8s-images.sh
    - bash /tmp/import-vsphere-k8s-images.sh
    - 'systemctl restart containerd; sleep 3'
    - 'while [ ! -S /var/run/containerd/containerd.sock ]; do echo "Waiting for containerd..."; sleep 1; done'
  postKubeadmCommands:
    - echo "Executing post kube admin config commands"
    - '/etc/kubernetes/pwx-node-labeler.sh'
  files:
    - targetPath: /etc/kubernetes/pwx-node-labeler.sh
      targetOwner: "root:root"
      targetPermissions: "0700"
      content: |
        #!/bin/bash
        if [[ ! -f /etc/kubernetes/admin.conf ]]; then
          export KUBECONFIG=/etc/kubernetes/kubelet.conf;
          zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
          while [ -z $zone ]; do
            echo "Waiting for zone label to get populated in the node $(hostname)...";
            sleep 10;
            zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
            #Check beta label as a fallback
            [ -z "$zone" ] && zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.failure-domain\.beta\.kubernetes\.io\/zone}");
          done;
          echo "Zone label populated on the node is $zone";
          kubectl label node `hostname` "px/rack=$zone";
        else
          echo "Skipping px-rack label for ControlPlane nodes"
        fi
    - targetPath: /usr/local/share/ca-certificates/mycom.crt
      targetOwner: "root:root"
      targetPermissions: "0644"
      content: |
        -----BEGIN CERTIFICATE-----
        MIIDXDCCAkSgAwIBAgIUV1lTWTLJM0e4bVIAT+kgGIo/EZgwDQYJKoZIhvcNAQEL
        BQAwGTEXMBUGA1UEAwwOYWlyZ2FwLXNwZWN0cm8wHhcNMjExMDAyMDkzMzIxWhcN
        MzEwOTMwMDkzMzIxWjAZMRcwFQYDVQQDDA5haXJnYXAtc3BlY3RybzCCASIwDQYJ
        KoZIhvcNAQEBBQADggEPADCCAQoCggEBAN8j8qG8Br1CarqzDKLvMZNcgrh06jh8
        4NIpzWcTrbVCu4T1h/u1vhXuWytKCLR/XX5SRIhNIoV5IqNvh43Iey+AzXkkXXXP
        ulKWIIvJI6Ofgpnmycj3vWZoIPWnND1hHp1t2Rok7iBJQKYgAAaSlKqDekm9yTtE
        q/E4UMhFy4bl0U+AJQHKto9VE4uYl1cltcr63vPmkqXEXRTGlECeErV4e2ngYYzK
        2wMh1i3+VcJ5PLloIwAjYeRwSapr7fqDN+leOy3/2c1HYmXmhE41jVBKmQpQoJrP
        dzRaVfiCqy4VbfNNzeTQ/R7MvdD+hMLyf44rTYPLTxRGY5vk3zykmpsCAwEAAaOB
        mzCBmDAdBgNVHQ4EFgQUfw3Bo7HIgyef7T2bpiaok1bEHn0wHwYDVR0jBBgwFoAU
        fw3Bo7HIgyef7T2bpiaok1bEHn0wDwYDVR0TAQH/BAUwAwEB/zAwBgNVHREEKTAn
        ghlhaXJnYXAuc3BlY3Ryb2Nsb3VkLmxvY2FshwR/AAABhwQKCqcsMBMGA1UdJQQM
        MAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4IBAQDInkRDwgM6HXCyo4QKIRUV
        ZaICy89cl6bQZ+eWlke+n2CYkGSmllle2VHOQMnbp/LZv6JauCRiPG7emRjGwSgm
        53i84oZi1bgHmq+QfoOjdhR08se9ntaiF2TqVu5voGm784rq5NARuACHkY0WPirJ
        BGPF0sMBcnvK/mXwW6VB0whm2e4o6TdqANmNM3Z+D2olAxSeAmVygnesQ7SdIH89
        pa4BEDsc6mQvWz9OEtZf+H3l13lKPFm0rEQ5ZPFD1AF4EgUD+jWbjsusVA9Tgko3
        pCLQ4CVxWJNwg1x52HzBZmCoTFaYVS6EKUXVrpRN+3aJzTIAtJuH6YbcnuTPKUuq
        -----END CERTIFICATE-----
