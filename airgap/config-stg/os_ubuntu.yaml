# Spectro Golden images includes most of the hardening standards recommended by CIS benchmarking v1.5
# Uncomment below section to
# 1. Include custom files to be copied over to the nodes and/or
# 2. Execute list of commands before or after kubeadm init/join is executed
#
kubeadmconfig:
  preKubeadmCommands:
    - echo "Executing pre kube admin config commands"
    - update-ca-certificates
    - curl --user spectro:admin@airgap http://10.10.244.90/images/import-vsphere-k8s-images.sh -o /tmp/import-vsphere-k8s-images.sh
    - bash /tmp/import-vsphere-k8s-images.sh
    - "systemctl restart containerd; sleep 3"
    - 'while [ ! -S /var/run/containerd/containerd.sock ]; do echo "Waiting for containerd..."; sleep 1; done'
  postKubeadmCommands:
    - echo "Executing post kube admin config commands"
    - '/etc/kubernetes/pwx-node-labeler.sh'
    - '/etc/kubernetes/node-labeler.sh'
  files:
    - targetPath: /etc/kubernetes/pwx-node-labeler.sh
      targetOwner: "root:root"
      targetPermissions: "0700"
      content: |
        #!/bin/bash
        if [[ ! -f /etc/kubernetes/admin.conf ]]; then
          export KUBECONFIG=/etc/kubernetes/kubelet.conf;
          zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
          while [ -z $zone ]; do
            echo "Waiting for zone label to get populated in the node $(hostname)...";
            sleep 10;
            zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.topology\.kubernetes\.io\/zone}");
            #Check beta label as a fallback
            [ -z "$zone" ] && zone=$(kubectl get node `hostname` -o jsonpath="{.metadata.labels.failure-domain\.beta\.kubernetes\.io\/zone}");
          done;
          echo "Zone label populated on the node is $zone";
          kubectl label node `hostname` "px/rack=$zone";
        else
          echo "Skipping px-rack label for ControlPlane nodes"
        fi
    - targetPath: /etc/kubernetes/node-labeler.sh
      targetOwner: "root:root"
      targetPermissions: "0700"
      content: |
        #!/bin/bash
        if [[ ! -f /etc/kubernetes/admin.conf ]]; then
          #For worker nodes, use kubelet.conf
          export KUBECONFIG=/etc/kubernetes/kubelet.conf;
          kubectl label node `hostname` "cluster.name={{ .spectro.system.cluster.name }}";
        else
          #For control-plane nodes, use admin.conf
          export KUBECONFIG=/etc/kubernetes/admin.conf;
          kubectl label node `hostname` "cluster.name={{ .spectro.system.cluster.name }}";
        fi
    - targetPath: /usr/local/share/ca-certificates/root_ca.crt
      targetOwner: "root:root"
      targetPermissions: "0644"
      content: |
        -----BEGIN CERTIFICATE-----
        MIIDXDCCAkSgAwIBAgIUZlho4pSIaqJn67jFDFlSZLja4LYwDQYJKoZIhvcNAQEL
        BQAwGTEXMBUGA1UEAwwOYWlyZ2FwLXNwZWN0cm8wHhcNMjMwNTE0MDQ1MjIyWhcN
        MzMwNTExMDQ1MjIyWjAZMRcwFQYDVQQDDA5haXJnYXAtc3BlY3RybzCCASIwDQYJ
        KoZIhvcNAQEBBQADggEPADCCAQoCggEBANrKqU6tIGQNqKT7WfU+4zfyg2pjuub1
        qzteypFPIB9p7A39xJXTN6cOCqPwNF95gW4iqNjIWzdUoBrWWSO+bQDBbAEIkFN4
        yxklMa2q/Sy5MsYxeGzjvjx+It07+hLXUjgPSp2oAnIJG/x9PzmQaN465BARjArL
        DR458NdyHcL99ltZsPuIZgXly8uSI84UrRG0QLwXJpAd5oT9460ZTYzbtwInGc+R
        aUM7uR0bj3/gmuktHEj1IKWAT0TI5DfOYQjHoESSfzVX6ytOFXcvMgEqfo5v74rX
        43EShFe2fhNIlgNcc6zcyADH2EuxrUZW6uDfeZ2EHZSLIygwy708BVkCAwEAAaOB
        mzCBmDAdBgNVHQ4EFgQU0+dRq7SEauHZSil0Hczz4UNRpiYwHwYDVR0jBBgwFoAU
        0+dRq7SEauHZSil0Hczz4UNRpiYwDwYDVR0TAQH/BAUwAwEB/zAwBgNVHREEKTAn
        ghlhaXJnYXAuc3BlY3Ryb2Nsb3VkLmxvY2FshwR/AAABhwQKCvRaMBMGA1UdJQQM
        MAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4IBAQDBQsZhf0W5uCCXWu0j48aS
        CNmyIak5A0MVsOZanrXa0n04vgalMgHlRaCR0dTvtaPxKmZmxLwJP6Z0aU5dVTwZ
        O6VFgA1+wAL95J8m1JVftLQrxQBQ561q2ZKTTdmDpoETtXCn0H7m6P7wzFXKLbPS
        fOFmequgMA+O+MUGPkMmrWvqn5/atz7Y30l15Ejt8iTs/wN0iZMlffICFnIGZSOj
        gIwC0q1yo6B3d+lvSCEghpw625zUKQfYtisuufoPmxY5vCpOXp0+Q1AzMmzPrxb9
        RS0RVO9HTP86BajFrWiaB9/Ib8uGKAcbH+5HMd9fT8NRSONDFL/8aAXC5pkydrxH
        -----END CERTIFICATE-----
