# This is a basic workflow that is manually triggered

name: Terraform Edison Plan

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  pull_request:
    types: [edited, opened, synchronize, reopened]
    paths:
    - 'edison-ai/**'
    - '.github/workflows/edison-tfplan.yaml'

env:
  SPECTROCLOUD_TF_PATH: edison-ai
  SPECTROCLOUD_WORKSPACE: default

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.SPECTROCLOUD_TF_PATH }}
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="access_key=${{ secrets.SC_S3_ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SC_S3_SECRET_KEY }}"

    - name: Terraform Workspace
      id: workspace
      run: terraform workspace select ${{ env.SPECTROCLOUD_WORKSPACE }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color -input=false \
        -var 'sc_host=${{ secrets.SC_HOST }}' \
        -var 'sc_project_name=FDefault' \
        -var 'sc_api_key=${{ secrets.SC_API_KEY }}'

    - uses: actions/github-script@v3
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

          <details open><summary>Show Plan</summary>

          \`\`\`hcl
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.SPECTROCLOUD_TF_PATH }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
